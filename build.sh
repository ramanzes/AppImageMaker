#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ AppImage Builder

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
if ! command -v docker-compose &> /dev/null; then
    log_error "docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ docker-compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

log_info "üê≥ AppImage Builder Docker"
echo "=========================="

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p ./itdid

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ todo
if [[ ! -f "./todo" ]]; then
    log_warning "–§–∞–π–ª todo –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä..."
    cat > ./todo << 'EOF'
# –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è AppImage
# –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ = –æ–¥–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞

krusader
htop
mc
gedit
EOF
    log_info "üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª todo —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º"
    log_info "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª todo –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
    exit 0
fi

log_info "üìù –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª todo:"
cat ./todo | grep -v '^[[:space:]]*#' | grep -v '^[[:space:]]*' | while read app; do
    echo "  ‚Ä¢ $app"
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
log_info ""
log_info "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
if ! ping -c 1 -W 3 8.8.8.8 >/dev/null 2>&1; then
    log_warning "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
    log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: chmod +x debug-network.sh && ./debug-network.sh"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Docker
if ! systemctl is-active --quiet docker 2>/dev/null; then
    log_warning "‚ö†Ô∏è Docker daemon –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    log_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: sudo systemctl start docker"
fi

log_info ""
log_info "üèóÔ∏è –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ AppImage —Ñ–∞–π–ª–æ–≤..."
log_info "üìÅ –ì–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ./itdid/"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ —Å–±–æ—Ä–∫–∏
build_with_retry() {
    local max_attempts=3
    local attempt=1
    
    while [[ $attempt -le $max_attempts ]]; do
        log_info "–ü–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏ $attempt –∏–∑ $max_attempts..."
        
        if docker-compose build --no-cache; then
            log_success "‚úÖ –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ —É—Å–ø–µ—à–Ω–∞!"
            break
        else
            log_warning "‚ùå –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –Ω–µ—É–¥–∞—á–Ω–∞ (–ø–æ–ø—ã—Ç–∫–∞ $attempt)"
            
            if [[ $attempt -eq $max_attempts ]]; then
                log_error "–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ —Å–±–æ—Ä–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã"
                log_info ""
                log_info "üõ†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
                log_info "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
                log_info "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: ./debug-network.sh"
                log_info "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π Dockerfile:"
                log_info "   mv Dockerfile Dockerfile.original"
                log_info "   mv Dockerfile.alternative Dockerfile"
                log_info "   ./build.sh"
                log_info "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ö–æ—Å—Ç-—Å–µ—Ç—å:"
                log_info "   docker build --network=host ."
                return 1
            fi
            
            ((attempt++))
            log_info "–û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π..."
            sleep 10
        fi
    done
    
    return 0
}

# –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
if ! build_with_retry; then
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
log_info "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏ AppImage..."
if docker-compose run --rm appimage-builder; then
    log_success "üéâ –ì–æ—Ç–æ–≤–æ!"
else
    log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–±–æ—Ä–∫–∏"
    log_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:"
    log_info "docker-compose run --rm appimage-builder bash"
    exit 1
fi

log_info "üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ./itdid/ –¥–ª—è –≥–æ—Ç–æ–≤—ã—Ö AppImage —Ñ–∞–π–ª–æ–≤"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
if ls ./itdid/*.AppImage 1> /dev/null 2>&1; then
    log_info ""
    log_success "üì¶ –°–æ–∑–¥–∞–Ω–Ω—ã–µ AppImage —Ñ–∞–π–ª—ã:"
    ls -la ./itdid/*.AppImage
    
    log_info ""
    log_info "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ AppImage:"
    echo "  chmod +x ./itdid/–Ω–∞–∑–≤–∞–Ω–∏–µ.AppImage"
    echo "  ./itdid/–Ω–∞–∑–≤–∞–Ω–∏–µ.AppImage"
else
    log_warning "‚ùå AppImage —Ñ–∞–π–ª—ã –Ω–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã"
    log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º"
fi
